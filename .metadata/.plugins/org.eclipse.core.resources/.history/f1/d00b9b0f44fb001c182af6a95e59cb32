package cn.zhou.interfacex;

import java.io.Serializable;

public class InterfaceDemo {

}

interface Pet extends Serializable {
	int age = 0;  //等效于public static final int age = 0;
	
	void eat();
	void sleep();  //普通的接口成员方法
	
	double sum(double i,double j);
	
	public default double Max(double i,double j) {
		return i>j?i:j;
	}
	
	public default double Min(double i,double j) {
		return i<j?i:j;
	}
}

class Cat implements Pet,Cloneable {
	int age = 10;
	@Override
	public void eat() {
		
	}  //实体方法

	@Override
	public void sleep() {
		
	}
	
}

interface A {
	void m();  //可以省略public abstract 修饰符
}

class B implements A {
//	void m(){}  //减小了权限修饰符范围为默认，重写大于等于
	public void m() {}
}